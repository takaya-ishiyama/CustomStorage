
type CreateUser {
	id: String!
	username: String!
	session: SessionSchema!
}

type DirectorySchema {
	id: String!
	userId: String!
	name: String!
	parentId: String
}


type GetNewToken {
	id: Int
	userId: String!
	accessToken: String
	refreshToken: String
}

type GetUser {
	id: String!
	username: String!
}



type ItemSchema {
	id: String!
	directoriesId: String!
	texts: String!
}

type Login {
	id: String!
	username: String!
	session: SessionSchema!
}

type Mutation {
	createUser(
		"""
		name of object
		"""
		username: String!,
		"""
		password of object
		"""
		password: String!
	): CreateUser!
}

type Query {
	currentToken: String
	login(
		"""
		name of object
		"""
		username: String!,
		"""
		password of object
		"""
		password: String!
	): Login!
	getNewToken: GetNewToken!
	loginWithToken: GetUser!
	getUser(
		"""
		Id of object
		"""
		id: String!
	): GetUser!
	getRootDirectory(
		"""
		user_id
		"""
		userId: String!
	): ServiceSchema!
}

type ServiceSchema {
	directories: [DirectorySchema!]
	items: [ItemSchema!]
}

type SessionSchema {
	id: Int
	userId: String!
	accessToken: String
	refreshToken: String
}


schema {
	query: Query
	mutation: Mutation
}
